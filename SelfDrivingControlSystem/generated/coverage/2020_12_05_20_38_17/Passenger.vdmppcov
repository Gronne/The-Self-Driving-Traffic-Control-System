
class Passenger is subclass of Citizen

	instance variables 
		tier_ : CarTier;
		countDown_ : Timer;

	operations
		private Passenger : () ==> Passenger
			Passenger() == return self;
			
		public Passenger : Speed`speed_t * Location`loc_t * CarTier ==> Passenger
			Passenger(walkingSpeed, location, carTier) == (
				Citizen`constructor(walkingSpeed, location);
				constructor(carTier);
			);
			
		public Passenger : Identification`ID_t * Speed`speed_t * Location`loc_t * CarTier ==> Passenger
			Passenger(id, walkingSpeed, location, carTier) == (
				Citizen`constructor(id, walkingSpeed, location);
				constructor(carTier);
			);
			
		protected constructor : CarTier ==> ()
			constructor(carTier) == (
				tier_ := carTier;
				countDown_ := new Timer();
			);
			
		public getTier : () ==> CarTier`tiers
			getTier() == return tier_.getTier();
			
		public getTimer : () ==> Timer`time_t
			getTimer() == return countDown_.getTime();

end Passenger