

class Pedestrian is subclass of Citizen

	operations
		private Pedestrian : () ==> Pedestrian
			Pedestrian() == return self;
			
		public Pedestrian : Speed`speed_t * Location`loc_t ==> Pedestrian
			Pedestrian(walkingSpeed, location) == (
				Citizen`constructor(walkingSpeed, location);
			);
			
		public Pedestrian : Identification`ID_t * Speed`speed_t * Location`loc_t ==> Pedestrian
			Pedestrian(id, walkingSpeed, location) == (
				Citizen`constructor(id, walkingSpeed, location);
			);
			
			
		public step : nat ==> ()
			step(time) == (
				route_ := travelRoute(route_, time, getSpeed());
			);
			
		protected travelRoute : Route * int * int ==> Route
			travelRoute(route, time, speed) == (
				let timeToTravel = floor((route.getElement(1).getLength()/speed) * 60 * 60) in
					if route.getNrOfElements() = 0 then return route
					else if timeToTravel <= time then return travelRoute(route.removeFront(), time - timeToTravel, speed)
					else return route;
			);

end Pedestrian