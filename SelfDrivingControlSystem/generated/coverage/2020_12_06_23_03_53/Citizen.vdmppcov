
class Citizen is subclass of ActorObject

	types
	
	
	
	instance variables
		walkingSpeed_ : Speed;
		destination_ : Location;


	operations
		protected Citizen : () ==> Citizen
			Citizen() == return self;
			
		public Citizen : Speed`speed_t * Location`loc_t ==> Citizen
			Citizen(walkingSpeed, location) == (
				constructor(walkingSpeed, location);
			);
			
		public Citizen : Identification`ID_t * Speed`speed_t * Location`loc_t ==> Citizen
			Citizen(id, walkingSpeed, location) == (
				constructor(id, walkingSpeed, location);
			);
			
		protected constructor : Speed`speed_t * Location`loc_t ==> ()
			constructor(walkingSpeed, location) == (
				walkingSpeed_ := new Speed(walkingSpeed);
				destination_ := new Location(location);			
			);
			
		protected constructor : Identification`ID_t * Speed`speed_t * Location`loc_t ==> ()
			constructor(id, walkingSpeed, location) == (
				ActorObject`constructor(id);
				constructor(walkingSpeed, location);	
			);
			
		pure public getSpeed : () ==> Speed`speed_t
			getSpeed() == return walkingSpeed_.getSpeed();
			
		pure public getDestination : () ==> Location`loc_t
			getDestination() == return destination_.getLocation();
			
			

end Citizen