

class Route
	
	types
		public route_t = seq of Road;
	
	instance variables
		route_: route_t := []	
		
	
	operations
		public Route : () ==> Route
			Route() == return self;
			
			
		public Route : Route ==> Route
			Route(route) == (
				route_ := route.route_;	
			);
			
			
		public addToRoute : Road ==> ()
			addToRoute(road) == (
				route_ := route_ ^ [road];
			)
			post route_(len route_) = road and len route_ > 0;
			
		
		public getNrOfElements : () ==> nat
			getNrOfElements() == (
				return len route_;
			);
			
			
		public getRouteLength : () ==> nat
			getRouteLength() == (
				dcl length : nat := 0;
				for road in route_ do length := length + road.getLength();
				return length;
			)
		post if len route_ = 0 then RESULT = 0 else RESULT > 0;
		
		
		public getElement : nat1 ==> Road
			getElement(index) == (
				return route_(index);
			)
			pre index > 0 and index <= len route_;
		
		
		public popFront : () ==> Road
			popFront() == (
				dcl frontRoad : Road := hd route_;
				route_ := tl route_;
				return frontRoad;
			)
			pre len route_ > 0;
		
		
		public popEnd : () ==> Road
			popEnd() == (
				dcl frontRoad : Road := route_(len route_);
				route_ := route_(1,...,len route_ - 1);
				return frontRoad;
			)
			pre len route_ > 0;
			
			
		public equalTo : Route ==> bool
			equalTo(route) == return route.route_ = route_;


end Route