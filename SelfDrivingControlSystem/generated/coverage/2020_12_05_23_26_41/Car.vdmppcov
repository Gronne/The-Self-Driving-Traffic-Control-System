

class Car is subclass of ActorObject

	values
		private defaultCarLength: Length`length_t = 300;
	
	instance variables
		protected length_: Length;
		protected route_: Route;	
		
	inv length_.getLength() > 0;
	
		
	functions
		protected LengthInv : Length * Length`length_t -> bool
			LengthInv(lengthObject, length) == lengthObject.getLength() = length;
		
	
	operations
		public Car : () ==> Car
			Car() == constructor(defaultCarLength);
	
	
		public Car : Length`length_t ==> Car
			Car(lengthOfCar) == constructor(lengthOfCar);
			
		
		public Car : Identification`ID_t * Length`length_t ==> Car
			Car(id, lengthOfCar) == constructor(id, lengthOfCar);


		protected updateRoute: Route ==> ()	
			updateRoute(route) == route_ := route
		pre route.getNrOfElements() > 0
		post route_.getNrOfElements() > 0;
		
			
		pure public getLengthOfCar: () ==> Length`length_t
			getLengthOfCar() == return length_.getLength()
			post RESULT = length_.getLength() and RESULT > 0;

			
		protected constructor : Length`length_t ==> ()
			constructor(lengthOfCar) == (
				length_ := new Length(lengthOfCar);
				route_ := new Route();
			)
			pre lengthOfCar > 0
			post LengthInv(length_, lengthOfCar);
			
			
		protected constructor : Identification`ID_t  * Length`length_t ==> ()
			constructor(id, lengthOfCar) == (
				constructor(lengthOfCar);
				ActorObject`constructor(id);
			)
			pre lengthOfCar > 0
			post LengthInv(length_, lengthOfCar);

			
		private keepDistance : () ==> ()
			keepDistance() == is not yet specified;
			
		pure public getRouteLength : () ==> nat
			getRouteLength() == return route_.getNrOfElements();

end Car



