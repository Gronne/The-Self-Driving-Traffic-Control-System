
class Autonomous is subclass of Car, CarTier

	types
		public passengers_t = set of Passenger;
		
	instance variables
		passengers_: passengers_t := {};
		travelHistory_: TravelHistory;
		
		/* Invariance here must always hold true. THe invariance in the post condition must only hold true in that instance */
		
		
	functions
		private AutoCon : passengers_t -> bool
			AutoCon(pas_set) == card pas_set = card {};
			
		private passengerInSet : Passenger * passengers_t -> bool
			passengerInSet(passenger, passengerSet) == passenger.getID() in set {p.getID() | p in set passengerSet};
			
		

	
	operations
		public Autonomous: CarTier`seat_t * CarTier`price_t * Length`length_t ==> Autonomous
			Autonomous(seats, price, lengthOfCar) == (
				Car(lengthOfCar); 
				CarTier(seats, price);
				travelHistory_ := new TravelHistory();
			)
		post LengthInv(length_, lengthOfCar) and AutoCon(passengers_) and price_ > 0 and seats > 0; 
		
		
		private  pickUpPassenger : Passenger ==> ()
			pickUpPassenger(passenger) == passengers_ := passengers_ union {passenger}
		pre passengerInSet(passenger, passengers_) = false
		post card passengers_ > 0 and passengerInSet(passenger, passengers_);
		
		
		private dropOffPassenger : Passenger ==> ()
			dropOffPassenger(passenger) == passengers_ := passengers_ \ {passenger}
		pre passengerInSet(passenger, passengers_)
		post card passengers_ >= 0 and passengerInSet(passenger, passengers_) = false;
			
		

end Autonomous